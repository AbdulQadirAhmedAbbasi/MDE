/*
 * generated by Xtext 2.25.0
 */
package org.xtext.microservices.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.microservices.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.microservices.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEnvironmentTypeAccess().getAlternatives(), "rule__EnvironmentType__Alternatives");
			builder.put(grammarAccess.getVMTypeAccess().getAlternatives(), "rule__VMType__Alternatives");
			builder.put(grammarAccess.getMicroserviceTypeAccess().getAlternatives(), "rule__MicroserviceType__Alternatives");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup(), "rule__Environment__Group__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_3(), "rule__Environment__Group_3__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_4(), "rule__Environment__Group_4__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_5(), "rule__Environment__Group_5__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_6(), "rule__Environment__Group_6__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_7(), "rule__Environment__Group_7__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_7_4(), "rule__Environment__Group_7_4__0");
			builder.put(grammarAccess.getServerNodeAccess().getGroup(), "rule__ServerNode__Group__0");
			builder.put(grammarAccess.getServerNodeAccess().getGroup_3(), "rule__ServerNode__Group_3__0");
			builder.put(grammarAccess.getServerNodeAccess().getGroup_4(), "rule__ServerNode__Group_4__0");
			builder.put(grammarAccess.getServerNodeAccess().getGroup_5(), "rule__ServerNode__Group_5__0");
			builder.put(grammarAccess.getServerNodeAccess().getGroup_6(), "rule__ServerNode__Group_6__0");
			builder.put(grammarAccess.getServerNodeAccess().getGroup_7(), "rule__ServerNode__Group_7__0");
			builder.put(grammarAccess.getServerNodeAccess().getGroup_8(), "rule__ServerNode__Group_8__0");
			builder.put(grammarAccess.getServerNodeAccess().getGroup_8_4(), "rule__ServerNode__Group_8_4__0");
			builder.put(grammarAccess.getVirtualMachineAccess().getGroup(), "rule__VirtualMachine__Group__0");
			builder.put(grammarAccess.getVirtualMachineAccess().getGroup_3(), "rule__VirtualMachine__Group_3__0");
			builder.put(grammarAccess.getVirtualMachineAccess().getGroup_4(), "rule__VirtualMachine__Group_4__0");
			builder.put(grammarAccess.getVirtualMachineAccess().getGroup_5(), "rule__VirtualMachine__Group_5__0");
			builder.put(grammarAccess.getVirtualMachineAccess().getGroup_6(), "rule__VirtualMachine__Group_6__0");
			builder.put(grammarAccess.getVirtualMachineAccess().getGroup_6_4(), "rule__VirtualMachine__Group_6_4__0");
			builder.put(grammarAccess.getContainerAccess().getGroup(), "rule__Container__Group__0");
			builder.put(grammarAccess.getContainerAccess().getGroup_3(), "rule__Container__Group_3__0");
			builder.put(grammarAccess.getContainerAccess().getGroup_4(), "rule__Container__Group_4__0");
			builder.put(grammarAccess.getContainerAccess().getGroup_5(), "rule__Container__Group_5__0");
			builder.put(grammarAccess.getContainerAccess().getGroup_6(), "rule__Container__Group_6__0");
			builder.put(grammarAccess.getContainerAccess().getGroup_7(), "rule__Container__Group_7__0");
			builder.put(grammarAccess.getMicroserviceAccess().getGroup(), "rule__Microservice__Group__0");
			builder.put(grammarAccess.getMicroserviceAccess().getGroup_3(), "rule__Microservice__Group_3__0");
			builder.put(grammarAccess.getMicroserviceAccess().getGroup_4(), "rule__Microservice__Group_4__0");
			builder.put(grammarAccess.getMicroserviceAccess().getGroup_5(), "rule__Microservice__Group_5__0");
			builder.put(grammarAccess.getEnvironmentModelAccess().getEnvironmentAssignment(), "rule__EnvironmentModel__EnvironmentAssignment");
			builder.put(grammarAccess.getEnvironmentAccess().getNameAssignment_1(), "rule__Environment__NameAssignment_1");
			builder.put(grammarAccess.getEnvironmentAccess().getIdAssignment_3_2(), "rule__Environment__IdAssignment_3_2");
			builder.put(grammarAccess.getEnvironmentAccess().getNameAssignment_4_2(), "rule__Environment__NameAssignment_4_2");
			builder.put(grammarAccess.getEnvironmentAccess().getTypeAssignment_5_2(), "rule__Environment__TypeAssignment_5_2");
			builder.put(grammarAccess.getEnvironmentAccess().getNameAssignment_6_2(), "rule__Environment__NameAssignment_6_2");
			builder.put(grammarAccess.getEnvironmentAccess().getNodesAssignment_7_3(), "rule__Environment__NodesAssignment_7_3");
			builder.put(grammarAccess.getEnvironmentAccess().getNodesAssignment_7_4_1(), "rule__Environment__NodesAssignment_7_4_1");
			builder.put(grammarAccess.getServerNodeAccess().getNameAssignment_1(), "rule__ServerNode__NameAssignment_1");
			builder.put(grammarAccess.getServerNodeAccess().getIdAssignment_3_2(), "rule__ServerNode__IdAssignment_3_2");
			builder.put(grammarAccess.getServerNodeAccess().getNameAssignment_4_2(), "rule__ServerNode__NameAssignment_4_2");
			builder.put(grammarAccess.getServerNodeAccess().getNameAssignment_5_2(), "rule__ServerNode__NameAssignment_5_2");
			builder.put(grammarAccess.getServerNodeAccess().getNameAssignment_6_2(), "rule__ServerNode__NameAssignment_6_2");
			builder.put(grammarAccess.getServerNodeAccess().getNameAssignment_7_2(), "rule__ServerNode__NameAssignment_7_2");
			builder.put(grammarAccess.getServerNodeAccess().getVmsAssignment_8_3(), "rule__ServerNode__VmsAssignment_8_3");
			builder.put(grammarAccess.getServerNodeAccess().getVmsAssignment_8_4_1(), "rule__ServerNode__VmsAssignment_8_4_1");
			builder.put(grammarAccess.getVirtualMachineAccess().getNameAssignment_1(), "rule__VirtualMachine__NameAssignment_1");
			builder.put(grammarAccess.getVirtualMachineAccess().getIdAssignment_3_2(), "rule__VirtualMachine__IdAssignment_3_2");
			builder.put(grammarAccess.getVirtualMachineAccess().getNameAssignment_4_2(), "rule__VirtualMachine__NameAssignment_4_2");
			builder.put(grammarAccess.getVirtualMachineAccess().getTypeAssignment_5_2(), "rule__VirtualMachine__TypeAssignment_5_2");
			builder.put(grammarAccess.getVirtualMachineAccess().getDockersAssignment_6_3(), "rule__VirtualMachine__DockersAssignment_6_3");
			builder.put(grammarAccess.getVirtualMachineAccess().getDockersAssignment_6_4_1(), "rule__VirtualMachine__DockersAssignment_6_4_1");
			builder.put(grammarAccess.getContainerAccess().getNameAssignment_1(), "rule__Container__NameAssignment_1");
			builder.put(grammarAccess.getContainerAccess().getIdAssignment_3_2(), "rule__Container__IdAssignment_3_2");
			builder.put(grammarAccess.getContainerAccess().getNameAssignment_4_2(), "rule__Container__NameAssignment_4_2");
			builder.put(grammarAccess.getContainerAccess().getNameAssignment_5_2(), "rule__Container__NameAssignment_5_2");
			builder.put(grammarAccess.getContainerAccess().getPortAssignment_6_2(), "rule__Container__PortAssignment_6_2");
			builder.put(grammarAccess.getContainerAccess().getMicroserviceAssignment_7_2(), "rule__Container__MicroserviceAssignment_7_2");
			builder.put(grammarAccess.getMicroserviceAccess().getNameAssignment_1(), "rule__Microservice__NameAssignment_1");
			builder.put(grammarAccess.getMicroserviceAccess().getIdAssignment_3_2(), "rule__Microservice__IdAssignment_3_2");
			builder.put(grammarAccess.getMicroserviceAccess().getNameAssignment_4_2(), "rule__Microservice__NameAssignment_4_2");
			builder.put(grammarAccess.getMicroserviceAccess().getTypeAssignment_5_2(), "rule__Microservice__TypeAssignment_5_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
