/*
 * generated by Xtext 2.25.0
 */
package org.xtext.microservices.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class EnvironmentModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.microservices.mydsl.MyDsl.EnvironmentModel");
		private final Assignment cEnvironmentAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEnvironmentEnvironmentParserRuleCall_0 = (RuleCall)cEnvironmentAssignment.eContents().get(0);
		
		//EnvironmentModel returns EnvironmentModel:
		//    environment=Environment;
		@Override public ParserRule getRule() { return rule; }
		
		//environment=Environment
		public Assignment getEnvironmentAssignment() { return cEnvironmentAssignment; }
		
		//Environment
		public RuleCall getEnvironmentEnvironmentParserRuleCall_0() { return cEnvironmentEnvironmentParserRuleCall_0; }
	}
	public class EnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.microservices.mydsl.MyDsl.Environment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnvironmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cIdAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cIdSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cIdAssignment_3_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cNameAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_2_0 = (RuleCall)cNameAssignment_4_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTypeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cTypeEnvironmentTypeEnumRuleCall_5_2_0 = (RuleCall)cTypeAssignment_5_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLocationKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cNameAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_6_2_0 = (RuleCall)cNameAssignment_6_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cServerNodesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cNodesAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cNodesServerNodeParserRuleCall_7_3_0 = (RuleCall)cNodesAssignment_7_3.eContents().get(0);
		private final Group cGroup_7_4 = (Group)cGroup_7.eContents().get(4);
		private final Keyword cCommaKeyword_7_4_0 = (Keyword)cGroup_7_4.eContents().get(0);
		private final Assignment cNodesAssignment_7_4_1 = (Assignment)cGroup_7_4.eContents().get(1);
		private final RuleCall cNodesServerNodeParserRuleCall_7_4_1_0 = (RuleCall)cNodesAssignment_7_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_5 = (Keyword)cGroup_7.eContents().get(5);
		private final Keyword cSemicolonKeyword_7_6 = (Keyword)cGroup_7.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//  //only zero or one enviroment can be initialised
		//Environment returns Environment:
		//     'environment' name=ID
		//    '{'
		//        ('id' '=' id=STRING ';')?
		//        ('name' '=' name=STRING ';')?
		//        ('type' '=' Type=EnvironmentType ';')?
		//        ('location' '=' name=STRING ';')?
		//        ('serverNodes' '=' '{' nodes+=ServerNode (',' nodes+=ServerNode)* '}' ';')? //only zero or many serverNodes can be initialised
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		// 'environment' name=ID
		//'{'
		//    ('id' '=' id=STRING ';')?
		//    ('name' '=' name=STRING ';')?
		//    ('type' '=' Type=EnvironmentType ';')?
		//    ('location' '=' name=STRING ';')?
		//    ('serverNodes' '=' '{' nodes+=ServerNode (',' nodes+=ServerNode)* '}' ';')? //only zero or many serverNodes can be initialised
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'environment'
		public Keyword getEnvironmentKeyword_0() { return cEnvironmentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('id' '=' id=STRING ';')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'id'
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//id=STRING
		public Assignment getIdAssignment_3_2() { return cIdAssignment_3_2; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_3_2_0() { return cIdSTRINGTerminalRuleCall_3_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_3() { return cSemicolonKeyword_3_3; }
		
		//('name' '=' name=STRING ';')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'name'
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//name=STRING
		public Assignment getNameAssignment_4_2() { return cNameAssignment_4_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_2_0() { return cNameSTRINGTerminalRuleCall_4_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }
		
		//('type' '=' Type=EnvironmentType ';')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }
		
		//Type=EnvironmentType
		public Assignment getTypeAssignment_5_2() { return cTypeAssignment_5_2; }
		
		//EnvironmentType
		public RuleCall getTypeEnvironmentTypeEnumRuleCall_5_2_0() { return cTypeEnvironmentTypeEnumRuleCall_5_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_3() { return cSemicolonKeyword_5_3; }
		
		//('location' '=' name=STRING ';')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'location'
		public Keyword getLocationKeyword_6_0() { return cLocationKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//name=STRING
		public Assignment getNameAssignment_6_2() { return cNameAssignment_6_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_6_2_0() { return cNameSTRINGTerminalRuleCall_6_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6_3() { return cSemicolonKeyword_6_3; }
		
		//('serverNodes' '=' '{' nodes+=ServerNode (',' nodes+=ServerNode)* '}' ';')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'serverNodes'
		public Keyword getServerNodesKeyword_7_0() { return cServerNodesKeyword_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_2() { return cLeftCurlyBracketKeyword_7_2; }
		
		//nodes+=ServerNode
		public Assignment getNodesAssignment_7_3() { return cNodesAssignment_7_3; }
		
		//ServerNode
		public RuleCall getNodesServerNodeParserRuleCall_7_3_0() { return cNodesServerNodeParserRuleCall_7_3_0; }
		
		//(',' nodes+=ServerNode)*
		public Group getGroup_7_4() { return cGroup_7_4; }
		
		//','
		public Keyword getCommaKeyword_7_4_0() { return cCommaKeyword_7_4_0; }
		
		//nodes+=ServerNode
		public Assignment getNodesAssignment_7_4_1() { return cNodesAssignment_7_4_1; }
		
		//ServerNode
		public RuleCall getNodesServerNodeParserRuleCall_7_4_1_0() { return cNodesServerNodeParserRuleCall_7_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_5() { return cRightCurlyBracketKeyword_7_5; }
		
		//';'
		public Keyword getSemicolonKeyword_7_6() { return cSemicolonKeyword_7_6; }
		
		////only zero or many serverNodes can be initialised
		//   '}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ServerNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.microservices.mydsl.MyDsl.ServerNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cIdAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cIdSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cIdAssignment_3_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cNameAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_2_0 = (RuleCall)cNameAssignment_4_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRAMKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cNameAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_5_2_0 = (RuleCall)cNameAssignment_5_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cProcessorKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cNameAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_6_2_0 = (RuleCall)cNameAssignment_6_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDiskKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cNameAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_2_0 = (RuleCall)cNameAssignment_7_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cVirtualMachinesKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cVmsAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cVmsVirtualMachineParserRuleCall_8_3_0 = (RuleCall)cVmsAssignment_8_3.eContents().get(0);
		private final Group cGroup_8_4 = (Group)cGroup_8.eContents().get(4);
		private final Keyword cCommaKeyword_8_4_0 = (Keyword)cGroup_8_4.eContents().get(0);
		private final Assignment cVmsAssignment_8_4_1 = (Assignment)cGroup_8_4.eContents().get(1);
		private final RuleCall cVmsVirtualMachineParserRuleCall_8_4_1_0 = (RuleCall)cVmsAssignment_8_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_5 = (Keyword)cGroup_8.eContents().get(5);
		private final Keyword cSemicolonKeyword_8_6 = (Keyword)cGroup_8.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ServerNode returns ServerNode:
		//    'node' name=ID
		//    '{'
		//        ('id' '=' id=STRING ';')?
		//        ('name' '=' name=STRING ';')?
		//        ('RAM' '=' name=STRING ';')?
		//        ('Processor' '=' name=STRING ';')?
		//        ('Disk' '=' name=STRING ';')?
		//        ('virtualMachines' '=' '{' vms+=VirtualMachine (',' vms+=VirtualMachine)* '}' ';')?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'node' name=ID
		//'{'
		//    ('id' '=' id=STRING ';')?
		//    ('name' '=' name=STRING ';')?
		//    ('RAM' '=' name=STRING ';')?
		//    ('Processor' '=' name=STRING ';')?
		//    ('Disk' '=' name=STRING ';')?
		//    ('virtualMachines' '=' '{' vms+=VirtualMachine (',' vms+=VirtualMachine)* '}' ';')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'node'
		public Keyword getNodeKeyword_0() { return cNodeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('id' '=' id=STRING ';')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'id'
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//id=STRING
		public Assignment getIdAssignment_3_2() { return cIdAssignment_3_2; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_3_2_0() { return cIdSTRINGTerminalRuleCall_3_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_3() { return cSemicolonKeyword_3_3; }
		
		//('name' '=' name=STRING ';')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'name'
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//name=STRING
		public Assignment getNameAssignment_4_2() { return cNameAssignment_4_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_2_0() { return cNameSTRINGTerminalRuleCall_4_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }
		
		//('RAM' '=' name=STRING ';')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'RAM'
		public Keyword getRAMKeyword_5_0() { return cRAMKeyword_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }
		
		//name=STRING
		public Assignment getNameAssignment_5_2() { return cNameAssignment_5_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_5_2_0() { return cNameSTRINGTerminalRuleCall_5_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_3() { return cSemicolonKeyword_5_3; }
		
		//('Processor' '=' name=STRING ';')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'Processor'
		public Keyword getProcessorKeyword_6_0() { return cProcessorKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//name=STRING
		public Assignment getNameAssignment_6_2() { return cNameAssignment_6_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_6_2_0() { return cNameSTRINGTerminalRuleCall_6_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6_3() { return cSemicolonKeyword_6_3; }
		
		//('Disk' '=' name=STRING ';')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Disk'
		public Keyword getDiskKeyword_7_0() { return cDiskKeyword_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }
		
		//name=STRING
		public Assignment getNameAssignment_7_2() { return cNameAssignment_7_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_2_0() { return cNameSTRINGTerminalRuleCall_7_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7_3() { return cSemicolonKeyword_7_3; }
		
		//('virtualMachines' '=' '{' vms+=VirtualMachine (',' vms+=VirtualMachine)* '}' ';')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'virtualMachines'
		public Keyword getVirtualMachinesKeyword_8_0() { return cVirtualMachinesKeyword_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_2() { return cLeftCurlyBracketKeyword_8_2; }
		
		//vms+=VirtualMachine
		public Assignment getVmsAssignment_8_3() { return cVmsAssignment_8_3; }
		
		//VirtualMachine
		public RuleCall getVmsVirtualMachineParserRuleCall_8_3_0() { return cVmsVirtualMachineParserRuleCall_8_3_0; }
		
		//(',' vms+=VirtualMachine)*
		public Group getGroup_8_4() { return cGroup_8_4; }
		
		//','
		public Keyword getCommaKeyword_8_4_0() { return cCommaKeyword_8_4_0; }
		
		//vms+=VirtualMachine
		public Assignment getVmsAssignment_8_4_1() { return cVmsAssignment_8_4_1; }
		
		//VirtualMachine
		public RuleCall getVmsVirtualMachineParserRuleCall_8_4_1_0() { return cVmsVirtualMachineParserRuleCall_8_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_5() { return cRightCurlyBracketKeyword_8_5; }
		
		//';'
		public Keyword getSemicolonKeyword_8_6() { return cSemicolonKeyword_8_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class VirtualMachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.microservices.mydsl.MyDsl.VirtualMachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVmKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cIdAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cIdSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cIdAssignment_3_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cNameAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_2_0 = (RuleCall)cNameAssignment_4_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTypeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cTypeVMTypeEnumRuleCall_5_2_0 = (RuleCall)cTypeAssignment_5_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cContainersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cDockersAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cDockersContainerParserRuleCall_6_3_0 = (RuleCall)cDockersAssignment_6_3.eContents().get(0);
		private final Group cGroup_6_4 = (Group)cGroup_6.eContents().get(4);
		private final Keyword cCommaKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Assignment cDockersAssignment_6_4_1 = (Assignment)cGroup_6_4.eContents().get(1);
		private final RuleCall cDockersContainerParserRuleCall_6_4_1_0 = (RuleCall)cDockersAssignment_6_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_5 = (Keyword)cGroup_6.eContents().get(5);
		private final Keyword cSemicolonKeyword_6_6 = (Keyword)cGroup_6.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//VirtualMachine returns VirtualMachine:
		//    'vm' name=ID
		//    '{'
		//        ('id' '=' id=STRING ';')?
		//        ('name' '=' name=STRING ';')?
		//        ('type' '=' Type=VMType ';')?
		//        ('containers' '=' '{' dockers+=Container (',' dockers+=Container)* '}' ';')?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'vm' name=ID
		//'{'
		//    ('id' '=' id=STRING ';')?
		//    ('name' '=' name=STRING ';')?
		//    ('type' '=' Type=VMType ';')?
		//    ('containers' '=' '{' dockers+=Container (',' dockers+=Container)* '}' ';')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'vm'
		public Keyword getVmKeyword_0() { return cVmKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('id' '=' id=STRING ';')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'id'
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//id=STRING
		public Assignment getIdAssignment_3_2() { return cIdAssignment_3_2; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_3_2_0() { return cIdSTRINGTerminalRuleCall_3_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_3() { return cSemicolonKeyword_3_3; }
		
		//('name' '=' name=STRING ';')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'name'
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//name=STRING
		public Assignment getNameAssignment_4_2() { return cNameAssignment_4_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_2_0() { return cNameSTRINGTerminalRuleCall_4_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }
		
		//('type' '=' Type=VMType ';')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }
		
		//Type=VMType
		public Assignment getTypeAssignment_5_2() { return cTypeAssignment_5_2; }
		
		//VMType
		public RuleCall getTypeVMTypeEnumRuleCall_5_2_0() { return cTypeVMTypeEnumRuleCall_5_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_3() { return cSemicolonKeyword_5_3; }
		
		//('containers' '=' '{' dockers+=Container (',' dockers+=Container)* '}' ';')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'containers'
		public Keyword getContainersKeyword_6_0() { return cContainersKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_2() { return cLeftCurlyBracketKeyword_6_2; }
		
		//dockers+=Container
		public Assignment getDockersAssignment_6_3() { return cDockersAssignment_6_3; }
		
		//Container
		public RuleCall getDockersContainerParserRuleCall_6_3_0() { return cDockersContainerParserRuleCall_6_3_0; }
		
		//(',' dockers+=Container)*
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//','
		public Keyword getCommaKeyword_6_4_0() { return cCommaKeyword_6_4_0; }
		
		//dockers+=Container
		public Assignment getDockersAssignment_6_4_1() { return cDockersAssignment_6_4_1; }
		
		//Container
		public RuleCall getDockersContainerParserRuleCall_6_4_1_0() { return cDockersContainerParserRuleCall_6_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_5() { return cRightCurlyBracketKeyword_6_5; }
		
		//';'
		public Keyword getSemicolonKeyword_6_6() { return cSemicolonKeyword_6_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.microservices.mydsl.MyDsl.Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDockerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cIdAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cIdSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cIdAssignment_3_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cNameAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_2_0 = (RuleCall)cNameAssignment_4_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIPKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cNameAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_5_2_0 = (RuleCall)cNameAssignment_5_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPortKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cPortAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cPortINTTerminalRuleCall_6_2_0 = (RuleCall)cPortAssignment_6_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMicroserviceKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cMicroserviceAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cMicroserviceMicroserviceParserRuleCall_7_2_0 = (RuleCall)cMicroserviceAssignment_7_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Container returns Container:
		//    'docker' name=ID
		//    '{'
		//        ('id' '=' id=STRING ';')?
		//        ('name' '=' name=STRING ';')?
		//        ('IP' '=' name=STRING ';')?
		//        ('Port' '=' Port=INT  ';')?
		//        ('Microservice' '=' Microservice=Microservice ';')? //only zero or one microservice can be initialised inside one container
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'docker' name=ID
		//'{'
		//    ('id' '=' id=STRING ';')?
		//    ('name' '=' name=STRING ';')?
		//    ('IP' '=' name=STRING ';')?
		//    ('Port' '=' Port=INT  ';')?
		//    ('Microservice' '=' Microservice=Microservice ';')? //only zero or one microservice can be initialised inside one container
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'docker'
		public Keyword getDockerKeyword_0() { return cDockerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('id' '=' id=STRING ';')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'id'
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//id=STRING
		public Assignment getIdAssignment_3_2() { return cIdAssignment_3_2; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_3_2_0() { return cIdSTRINGTerminalRuleCall_3_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_3() { return cSemicolonKeyword_3_3; }
		
		//('name' '=' name=STRING ';')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'name'
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//name=STRING
		public Assignment getNameAssignment_4_2() { return cNameAssignment_4_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_2_0() { return cNameSTRINGTerminalRuleCall_4_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }
		
		//('IP' '=' name=STRING ';')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'IP'
		public Keyword getIPKeyword_5_0() { return cIPKeyword_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }
		
		//name=STRING
		public Assignment getNameAssignment_5_2() { return cNameAssignment_5_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_5_2_0() { return cNameSTRINGTerminalRuleCall_5_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_3() { return cSemicolonKeyword_5_3; }
		
		//('Port' '=' Port=INT  ';')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'Port'
		public Keyword getPortKeyword_6_0() { return cPortKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//Port=INT
		public Assignment getPortAssignment_6_2() { return cPortAssignment_6_2; }
		
		//INT
		public RuleCall getPortINTTerminalRuleCall_6_2_0() { return cPortINTTerminalRuleCall_6_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6_3() { return cSemicolonKeyword_6_3; }
		
		//('Microservice' '=' Microservice=Microservice ';')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Microservice'
		public Keyword getMicroserviceKeyword_7_0() { return cMicroserviceKeyword_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }
		
		//Microservice=Microservice
		public Assignment getMicroserviceAssignment_7_2() { return cMicroserviceAssignment_7_2; }
		
		//Microservice
		public RuleCall getMicroserviceMicroserviceParserRuleCall_7_2_0() { return cMicroserviceMicroserviceParserRuleCall_7_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7_3() { return cSemicolonKeyword_7_3; }
		
		////only zero or one microservice can be initialised inside one container
		//   '}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class MicroserviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.microservices.mydsl.MyDsl.Microservice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cIdAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cIdSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cIdAssignment_3_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cNameAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_2_0 = (RuleCall)cNameAssignment_4_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTypeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cTypeMicroserviceTypeEnumRuleCall_5_2_0 = (RuleCall)cTypeAssignment_5_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Microservice returns Microservice:
		//    'service' name=ID
		//    '{'
		//        ('id' '=' id=STRING ';')?
		//        ('name' '=' name=STRING ';')?
		//        ('type' '=' Type=MicroserviceType ';')?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'service' name=ID
		//'{'
		//    ('id' '=' id=STRING ';')?
		//    ('name' '=' name=STRING ';')?
		//    ('type' '=' Type=MicroserviceType ';')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'service'
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('id' '=' id=STRING ';')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'id'
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//id=STRING
		public Assignment getIdAssignment_3_2() { return cIdAssignment_3_2; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_3_2_0() { return cIdSTRINGTerminalRuleCall_3_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_3() { return cSemicolonKeyword_3_3; }
		
		//('name' '=' name=STRING ';')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'name'
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//name=STRING
		public Assignment getNameAssignment_4_2() { return cNameAssignment_4_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_2_0() { return cNameSTRINGTerminalRuleCall_4_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }
		
		//('type' '=' Type=MicroserviceType ';')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }
		
		//Type=MicroserviceType
		public Assignment getTypeAssignment_5_2() { return cTypeAssignment_5_2; }
		
		//MicroserviceType
		public RuleCall getTypeMicroserviceTypeEnumRuleCall_5_2_0() { return cTypeMicroserviceTypeEnumRuleCall_5_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_3() { return cSemicolonKeyword_5_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	public class EnvironmentTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.microservices.mydsl.MyDsl.EnvironmentType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDevelopmentEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDevelopmentDevelopmentKeyword_0_0 = (Keyword)cDevelopmentEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTestEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTestTestKeyword_1_0 = (Keyword)cTestEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cUATEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cUATUATKeyword_2_0 = (Keyword)cUATEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDemoEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDemoDemoKeyword_3_0 = (Keyword)cDemoEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cProductionEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cProductionProductionKeyword_4_0 = (Keyword)cProductionEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum EnvironmentType returns EnvironmentType:
		//            Development = 'Development' | Test = 'Test' | UAT = 'UAT' | Demo = 'Demo' | Production = 'Production';
		public EnumRule getRule() { return rule; }
		
		//Development = 'Development' | Test = 'Test' | UAT = 'UAT' | Demo = 'Demo' | Production = 'Production'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Development = 'Development'
		public EnumLiteralDeclaration getDevelopmentEnumLiteralDeclaration_0() { return cDevelopmentEnumLiteralDeclaration_0; }
		
		//'Development'
		public Keyword getDevelopmentDevelopmentKeyword_0_0() { return cDevelopmentDevelopmentKeyword_0_0; }
		
		//Test = 'Test'
		public EnumLiteralDeclaration getTestEnumLiteralDeclaration_1() { return cTestEnumLiteralDeclaration_1; }
		
		//'Test'
		public Keyword getTestTestKeyword_1_0() { return cTestTestKeyword_1_0; }
		
		//UAT = 'UAT'
		public EnumLiteralDeclaration getUATEnumLiteralDeclaration_2() { return cUATEnumLiteralDeclaration_2; }
		
		//'UAT'
		public Keyword getUATUATKeyword_2_0() { return cUATUATKeyword_2_0; }
		
		//Demo = 'Demo'
		public EnumLiteralDeclaration getDemoEnumLiteralDeclaration_3() { return cDemoEnumLiteralDeclaration_3; }
		
		//'Demo'
		public Keyword getDemoDemoKeyword_3_0() { return cDemoDemoKeyword_3_0; }
		
		//Production = 'Production'
		public EnumLiteralDeclaration getProductionEnumLiteralDeclaration_4() { return cProductionEnumLiteralDeclaration_4; }
		
		//'Production'
		public Keyword getProductionProductionKeyword_4_0() { return cProductionProductionKeyword_4_0; }
	}
	public class VMTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.microservices.mydsl.MyDsl.VMType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLinuxEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLinuxLinuxKeyword_0_0 = (Keyword)cLinuxEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRedHatEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRedHatRedHatKeyword_1_0 = (Keyword)cRedHatEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWindowsEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWindowsWindowsKeyword_2_0 = (Keyword)cWindowsEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCentOSEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCentOSCentOSKeyword_3_0 = (Keyword)cCentOSEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum VMType returns VMType:
		//            Linux = 'Linux' | RedHat = 'RedHat' | Windows = 'Windows' | CentOS = 'CentOS';
		public EnumRule getRule() { return rule; }
		
		//Linux = 'Linux' | RedHat = 'RedHat' | Windows = 'Windows' | CentOS = 'CentOS'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Linux = 'Linux'
		public EnumLiteralDeclaration getLinuxEnumLiteralDeclaration_0() { return cLinuxEnumLiteralDeclaration_0; }
		
		//'Linux'
		public Keyword getLinuxLinuxKeyword_0_0() { return cLinuxLinuxKeyword_0_0; }
		
		//RedHat = 'RedHat'
		public EnumLiteralDeclaration getRedHatEnumLiteralDeclaration_1() { return cRedHatEnumLiteralDeclaration_1; }
		
		//'RedHat'
		public Keyword getRedHatRedHatKeyword_1_0() { return cRedHatRedHatKeyword_1_0; }
		
		//Windows = 'Windows'
		public EnumLiteralDeclaration getWindowsEnumLiteralDeclaration_2() { return cWindowsEnumLiteralDeclaration_2; }
		
		//'Windows'
		public Keyword getWindowsWindowsKeyword_2_0() { return cWindowsWindowsKeyword_2_0; }
		
		//CentOS = 'CentOS'
		public EnumLiteralDeclaration getCentOSEnumLiteralDeclaration_3() { return cCentOSEnumLiteralDeclaration_3; }
		
		//'CentOS'
		public Keyword getCentOSCentOSKeyword_3_0() { return cCentOSCentOSKeyword_3_0; }
	}
	public class MicroserviceTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.microservices.mydsl.MyDsl.MicroserviceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInternalEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInternalInternalKeyword_0_0 = (Keyword)cInternalEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cExternalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cExternalExternalKeyword_1_0 = (Keyword)cExternalEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum MicroserviceType returns MicroserviceType:
		//            Internal = 'Internal' | External = 'External';
		public EnumRule getRule() { return rule; }
		
		//Internal = 'Internal' | External = 'External'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Internal = 'Internal'
		public EnumLiteralDeclaration getInternalEnumLiteralDeclaration_0() { return cInternalEnumLiteralDeclaration_0; }
		
		//'Internal'
		public Keyword getInternalInternalKeyword_0_0() { return cInternalInternalKeyword_0_0; }
		
		//External = 'External'
		public EnumLiteralDeclaration getExternalEnumLiteralDeclaration_1() { return cExternalEnumLiteralDeclaration_1; }
		
		//'External'
		public Keyword getExternalExternalKeyword_1_0() { return cExternalExternalKeyword_1_0; }
	}
	
	private final EnvironmentModelElements pEnvironmentModel;
	private final EnvironmentElements pEnvironment;
	private final EnvironmentTypeElements eEnvironmentType;
	private final ServerNodeElements pServerNode;
	private final VirtualMachineElements pVirtualMachine;
	private final VMTypeElements eVMType;
	private final ContainerElements pContainer;
	private final MicroserviceElements pMicroservice;
	private final MicroserviceTypeElements eMicroserviceType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pEnvironmentModel = new EnvironmentModelElements();
		this.pEnvironment = new EnvironmentElements();
		this.eEnvironmentType = new EnvironmentTypeElements();
		this.pServerNode = new ServerNodeElements();
		this.pVirtualMachine = new VirtualMachineElements();
		this.eVMType = new VMTypeElements();
		this.pContainer = new ContainerElements();
		this.pMicroservice = new MicroserviceElements();
		this.eMicroserviceType = new MicroserviceTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.microservices.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//EnvironmentModel returns EnvironmentModel:
	//    environment=Environment;
	public EnvironmentModelElements getEnvironmentModelAccess() {
		return pEnvironmentModel;
	}
	
	public ParserRule getEnvironmentModelRule() {
		return getEnvironmentModelAccess().getRule();
	}
	
	//  //only zero or one enviroment can be initialised
	//Environment returns Environment:
	//     'environment' name=ID
	//    '{'
	//        ('id' '=' id=STRING ';')?
	//        ('name' '=' name=STRING ';')?
	//        ('type' '=' Type=EnvironmentType ';')?
	//        ('location' '=' name=STRING ';')?
	//        ('serverNodes' '=' '{' nodes+=ServerNode (',' nodes+=ServerNode)* '}' ';')? //only zero or many serverNodes can be initialised
	//    '}';
	public EnvironmentElements getEnvironmentAccess() {
		return pEnvironment;
	}
	
	public ParserRule getEnvironmentRule() {
		return getEnvironmentAccess().getRule();
	}
	
	//enum EnvironmentType returns EnvironmentType:
	//            Development = 'Development' | Test = 'Test' | UAT = 'UAT' | Demo = 'Demo' | Production = 'Production';
	public EnvironmentTypeElements getEnvironmentTypeAccess() {
		return eEnvironmentType;
	}
	
	public EnumRule getEnvironmentTypeRule() {
		return getEnvironmentTypeAccess().getRule();
	}
	
	//ServerNode returns ServerNode:
	//    'node' name=ID
	//    '{'
	//        ('id' '=' id=STRING ';')?
	//        ('name' '=' name=STRING ';')?
	//        ('RAM' '=' name=STRING ';')?
	//        ('Processor' '=' name=STRING ';')?
	//        ('Disk' '=' name=STRING ';')?
	//        ('virtualMachines' '=' '{' vms+=VirtualMachine (',' vms+=VirtualMachine)* '}' ';')?
	//    '}';
	public ServerNodeElements getServerNodeAccess() {
		return pServerNode;
	}
	
	public ParserRule getServerNodeRule() {
		return getServerNodeAccess().getRule();
	}
	
	//VirtualMachine returns VirtualMachine:
	//    'vm' name=ID
	//    '{'
	//        ('id' '=' id=STRING ';')?
	//        ('name' '=' name=STRING ';')?
	//        ('type' '=' Type=VMType ';')?
	//        ('containers' '=' '{' dockers+=Container (',' dockers+=Container)* '}' ';')?
	//    '}';
	public VirtualMachineElements getVirtualMachineAccess() {
		return pVirtualMachine;
	}
	
	public ParserRule getVirtualMachineRule() {
		return getVirtualMachineAccess().getRule();
	}
	
	//enum VMType returns VMType:
	//            Linux = 'Linux' | RedHat = 'RedHat' | Windows = 'Windows' | CentOS = 'CentOS';
	public VMTypeElements getVMTypeAccess() {
		return eVMType;
	}
	
	public EnumRule getVMTypeRule() {
		return getVMTypeAccess().getRule();
	}
	
	//Container returns Container:
	//    'docker' name=ID
	//    '{'
	//        ('id' '=' id=STRING ';')?
	//        ('name' '=' name=STRING ';')?
	//        ('IP' '=' name=STRING ';')?
	//        ('Port' '=' Port=INT  ';')?
	//        ('Microservice' '=' Microservice=Microservice ';')? //only zero or one microservice can be initialised inside one container
	//    '}';
	public ContainerElements getContainerAccess() {
		return pContainer;
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}
	
	//Microservice returns Microservice:
	//    'service' name=ID
	//    '{'
	//        ('id' '=' id=STRING ';')?
	//        ('name' '=' name=STRING ';')?
	//        ('type' '=' Type=MicroserviceType ';')?
	//    '}';
	public MicroserviceElements getMicroserviceAccess() {
		return pMicroservice;
	}
	
	public ParserRule getMicroserviceRule() {
		return getMicroserviceAccess().getRule();
	}
	
	//enum MicroserviceType returns MicroserviceType:
	//            Internal = 'Internal' | External = 'External';
	public MicroserviceTypeElements getMicroserviceTypeAccess() {
		return eMicroserviceType;
	}
	
	public EnumRule getMicroserviceTypeRule() {
		return getMicroserviceTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
